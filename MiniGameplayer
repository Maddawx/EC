// ==UserScript==
// @name         Mini Game Container (Draggable, Styled & Save Games)
// @namespace    http://tampermonkey.net/
// @version      1.4
// @description  A draggable, stylish game container with save/load functionality for JS games
// @author       You
// @match        *://*/*
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    const STORAGE_KEY = "savedGames"; // Local storage key

    // Load saved games from storage
    function loadSavedGames() {
        return JSON.parse(localStorage.getItem(STORAGE_KEY) || "{}");
    }

    // Save games back to storage
    function saveGames(games) {
        localStorage.setItem(STORAGE_KEY, JSON.stringify(games));
    }

    // Create the main container
    let container = document.createElement("div");
    Object.assign(container.style, {
        position: "fixed",
        bottom: "50px",
        right: "50px",
        width: "320px",
        height: "400px",
        backgroundColor: "#222",
        border: "2px solid #444",
        padding: "10px",
        zIndex: "10000",
        display: "flex",
        flexDirection: "column",
        boxShadow: "3px 3px 15px rgba(0,0,0,0.5)",
        borderRadius: "8px",
        fontFamily: "Arial, sans-serif",
        color: "white",
        overflow: "hidden"
    });

    // Header for dragging
    let header = document.createElement("div");
    Object.assign(header.style, {
        width: "100%",
        height: "30px",
        backgroundColor: "#333",
        cursor: "move",
        textAlign: "center",
        fontSize: "14px",
        fontWeight: "bold",
        lineHeight: "30px",
        borderTopLeftRadius: "6px",
        borderTopRightRadius: "6px",
        userSelect: "none"
    });
    header.innerText = "ðŸŽ® Mini Game Runner";

    // Dropdown to load saved games
    let gameSelector = document.createElement("select");
    Object.assign(gameSelector.style, {
        width: "100%",
        padding: "5px",
        marginTop: "5px",
        backgroundColor: "#111",
        color: "#ddd",
        border: "1px solid #555",
        borderRadius: "5px"
    });
    gameSelector.innerHTML = "<option value=''>-- Select a Game --</option>";

    // Load saved games into dropdown
    function updateGameSelector() {
        let games = loadSavedGames();
        gameSelector.innerHTML = "<option value=''>-- Select a Game --</option>";
        Object.keys(games).forEach(gameName => {
            let option = document.createElement("option");
            option.value = gameName;
            option.innerText = gameName;
            gameSelector.appendChild(option);
        });
    }

    // Textarea for input
    let textarea = document.createElement("textarea");
    Object.assign(textarea.style, {
        width: "100%",
        height: "60px",
        resize: "none",
        fontSize: "12px",
        padding: "5px",
        border: "1px solid #555",
        borderRadius: "5px",
        backgroundColor: "#111",
        color: "#ddd",
        marginTop: "5px"
    });
    textarea.placeholder = "Enter JavaScript game code...";

    // "Run Game" button
    let runButton = document.createElement("button");
    Object.assign(runButton.style, {
        marginTop: "5px",
        padding: "7px",
        backgroundColor: "#4CAF50",
        color: "white",
        border: "none",
        cursor: "pointer",
        fontSize: "14px",
        borderRadius: "5px",
        transition: "0.2s"
    });
    runButton.innerText = "â–¶ Run Game";
    runButton.onmouseover = () => runButton.style.backgroundColor = "#45a049";
    runButton.onmouseout = () => runButton.style.backgroundColor = "#4CAF50";

    // "Save Game" button
    let saveButton = document.createElement("button");
    Object.assign(saveButton.style, {
        marginTop: "5px",
        padding: "7px",
        backgroundColor: "#2196F3",
        color: "white",
        border: "none",
        cursor: "pointer",
        fontSize: "14px",
        borderRadius: "5px",
        transition: "0.2s"
    });
    saveButton.innerText = "ðŸ’¾ Save Game";
    saveButton.onmouseover = () => saveButton.style.backgroundColor = "#1e87dc";
    saveButton.onmouseout = () => saveButton.style.backgroundColor = "#2196F3";

    // "Delete Game" button
    let deleteButton = document.createElement("button");
    Object.assign(deleteButton.style, {
        marginTop: "5px",
        padding: "7px",
        backgroundColor: "#f44336",
        color: "white",
        border: "none",
        cursor: "pointer",
        fontSize: "14px",
        borderRadius: "5px",
        transition: "0.2s"
    });
    deleteButton.innerText = "ðŸ—‘ Delete Game";
    deleteButton.onmouseover = () => deleteButton.style.backgroundColor = "#d32f2f";
    deleteButton.onmouseout = () => deleteButton.style.backgroundColor = "#f44336";

    // Iframe for game
    let iframe = document.createElement("iframe");
    Object.assign(iframe.style, {
        width: "100%",
        height: "200px",
        border: "1px solid #555",
        backgroundColor: "black",
        marginTop: "10px",
        borderRadius: "5px"
    });

    // Run the game
    runButton.onclick = function() {
        let gameCode = textarea.value;
        let iframeDoc = iframe.contentDocument || iframe.contentWindow.document;

        // Reset iframe
        iframeDoc.open();
        iframeDoc.write(`<html><body></body></html>`);
        iframeDoc.close();

        // Inject script
        let script = iframeDoc.createElement("script");
        script.textContent = gameCode;
        iframeDoc.body.appendChild(script);
    };

    // Save the game
    saveButton.onclick = function() {
        let gameName = prompt("Enter a name for this game:");
        if (gameName) {
            let games = loadSavedGames();
            games[gameName] = textarea.value;
            saveGames(games);
            updateGameSelector();
            alert(`Game "${gameName}" saved!`);
        }
    };

    // Load selected game
    gameSelector.onchange = function() {
        let games = loadSavedGames();
        let selectedGame = gameSelector.value;
        if (selectedGame && games[selectedGame]) {
            textarea.value = games[selectedGame];
        }
    };

    // Delete selected game
    deleteButton.onclick = function() {
        let selectedGame = gameSelector.value;
        if (selectedGame && confirm(`Delete "${selectedGame}"?`)) {
            let games = loadSavedGames();
            delete games[selectedGame];
            saveGames(games);
            updateGameSelector();
            textarea.value = "";
            alert(`Game "${selectedGame}" deleted!`);
        }
    };

    // Make container draggable
    let isDragging = false, startX, startY, initialX, initialY;
    header.onmousedown = function(e) {
        isDragging = true;
        startX = e.clientX;
        startY = e.clientY;
        initialX = container.offsetLeft;
        initialY = container.offsetTop;
        document.onmousemove = onMouseMove;
        document.onmouseup = () => { isDragging = false; document.onmousemove = null; };
    };
    function onMouseMove(e) {
        if (!isDragging) return;
        container.style.left = `${initialX + (e.clientX - startX)}px`;
        container.style.top = `${initialY + (e.clientY - startY)}px`;
    }

    // Append elements
    container.append(header, gameSelector, textarea, runButton, saveButton, deleteButton, iframe);
    document.body.appendChild(container);
    updateGameSelector();
})();
